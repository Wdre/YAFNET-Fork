{"version":3,"file":"themeSelector.min.js","mappings":";;mBAMA,MAEI,MAcMA,EAAiB,IAdL,CAACC,IACf,MAAMC,EAAO,GAAGD,KACVE,EAAKC,SAASC,OAAOC,MAAM,KACjC,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAGK,OAAQD,IAAK,CAChC,IAAIE,EAAIN,EAAGI,GACX,KAAuB,MAAhBE,EAAEC,OAAO,IACZD,EAAIA,EAAEE,UAAU,GAEpB,GAAwB,IAApBF,EAAEG,QAAQV,GACV,OAAOO,EAAEE,UAAUT,EAAKM,OAAQC,EAAED,OAE1C,CACA,MAAO,EAAE,EAEgBK,CAAU,aAOjCC,EAAoB,KACtB,MAAMC,EAAcf,IACpB,OAAIe,IAGGC,OAAOC,WAAW,gCAAgCC,QAAU,OAAS,QAAO,EAEjFC,EAAYC,IACA,SAAVA,EACAhB,SAASiB,gBAAgBC,aAAa,gBAAkBN,OAAOC,WAAW,gCAAgCC,QAAU,OAAS,SAG7Hd,SAASiB,gBAAgBC,aAAa,gBAAiBF,EAC3D,EAEJD,EAASL,KACT,MAAMS,EAAmBH,IACrB,IAAII,EACJ,MAAMC,EAAgBrB,SAASsB,eAAe,YAC9C,IAAKD,EACD,OAEJ,MAAME,EAAoBvB,SAASsB,eAAe,iBAAkBE,EAAkBxB,SAASyB,cAAc,sBAAuBC,EAAc1B,SAASyB,cAAc,yBAAyBT,OAAYW,GAA6D,QAAzCP,EAAKM,EAAYD,cAAc,YAAyB,IAAPL,OAAgB,EAASA,EAAGQ,YAAc,GAAIC,EAAmBH,EAAYD,cAAc,aAC9WzB,SAAS8B,iBAAiB,yBAAyBC,SAASC,IACxDA,EAAQC,UAAUC,OAAO,UACzBF,EAAQd,aAAa,eAAgB,SACnBc,EAAQP,cAAc,aAC9BQ,UAAUE,IAAI,SAAS,IAErCT,EAAYO,UAAUE,IAAI,UAC1BT,EAAYR,aAAa,eAAgB,QACzCW,EAAiBI,UAAUC,OAAO,UAClCV,EAAgBN,aAAa,QAAS,GAAGS,uBACzC,MAAMS,EAAqB,GAAGb,EAAkBc,gBAAgBX,EAAYY,QAAQC,gBACpFlB,EAAcH,aAAa,aAAckB,EAAmB,EAEhExB,OAAOC,WAAW,gCAAgC2B,iBAAiB,UAAU,KACzE,MAAM7B,EAAcf,IACA,UAAhBe,GAA2C,SAAhBA,GAC3BI,EAASL,IACb,IAEJE,OAAO4B,iBAAiB,oBAAoB,KACxCrB,EAAgBT,KAChBV,SAAS8B,iBAAiB,yBACrBC,SAAQU,IACTA,EAAOD,iBAAiB,SAAS,KAC7B,MAAMxB,EAAQyB,EAAOC,aAAa,uBArDvB,CAAC1B,IACpB,MAAM2B,EAAI,IAAIC,KACdD,EAAEE,QAAQF,EAAEG,UAAY,SACxB,MAAMC,EAAU,WAAWJ,EAAEK,gBAC7BhD,SAASC,OAAS,GAAGgD,mBAAmB,gBAAgBA,mBAAmBjC,OAAW+B,WAAiB,EAkD/FG,CAAelC,GACfD,EAASC,GACTG,EAAgBH,EAAM,GACxB,GACJ,GAET,EA7ED,E","sources":["webpack://yetanotherforum-net/./wwwroot/lib/bootstrap/themeSelector.ts"],"sourcesContent":["\"use strict\";\n/*!\n * Color mode toggler for Bootstrap's docs (https://getbootstrap.com/)\n * Copyright 2011-2024 The Bootstrap Authors\n * Licensed under the Creative Commons Attribution 3.0 Unported License.\n */\n(() => {\n    'use strict';\n    const getCookie = (cookieName) => {\n        const name = `${cookieName}=`;\n        const ca = document.cookie.split(';');\n        for (let i = 0; i < ca.length; i++) {\n            let c = ca[i];\n            while (c.charAt(0) === ' ') {\n                c = c.substring(1);\n            }\n            if (c.indexOf(name) === 0) {\n                return c.substring(name.length, c.length);\n            }\n        }\n        return '';\n    };\n    const getStoredTheme = () => getCookie('YAF-Theme');\n    const setStoredTheme = (theme) => {\n        const d = new Date();\n        d.setTime(d.getTime() + (365 * 24 * 60 * 60 * 1000));\n        const expires = `expires=${d.toUTCString()}`;\n        document.cookie = `${encodeURIComponent('YAF-Theme')}=${encodeURIComponent(theme)}; ${expires}; path=/`;\n    };\n    const getPreferredTheme = () => {\n        const storedTheme = getStoredTheme();\n        if (storedTheme) {\n            return storedTheme;\n        }\n        return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n    };\n    const setTheme = (theme) => {\n        if (theme === 'auto') {\n            document.documentElement.setAttribute('data-bs-theme', (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'));\n        }\n        else {\n            document.documentElement.setAttribute('data-bs-theme', theme);\n        }\n    };\n    setTheme(getPreferredTheme());\n    const showActiveTheme = (theme) => {\n        var _a;\n        const themeSwitcher = document.getElementById('bd-theme');\n        if (!themeSwitcher) {\n            return;\n        }\n        const themeSwitcherText = document.getElementById('bd-theme-text'), activeThemeIcon = document.querySelector('.theme-icon-active'), btnToActive = document.querySelector(`[data-bs-theme-value=\"${theme}\"]`), iconOfActiveBtn = ((_a = btnToActive.querySelector('i')) === null || _a === void 0 ? void 0 : _a.className) || '', checkOfActiveBtn = btnToActive.querySelector('.fa-check');\n        document.querySelectorAll('[data-bs-theme-value]').forEach((element) => {\n            element.classList.remove('active');\n            element.setAttribute('aria-pressed', 'false');\n            const checkIcon = element.querySelector('.fa-check');\n            checkIcon.classList.add('d-none');\n        });\n        btnToActive.classList.add('active');\n        btnToActive.setAttribute('aria-pressed', 'true');\n        checkOfActiveBtn.classList.remove('d-none');\n        activeThemeIcon.setAttribute('class', `${iconOfActiveBtn} theme-icon-active`);\n        const themeSwitcherLabel = `${themeSwitcherText.textContent} (${btnToActive.dataset.bsThemeValue})`;\n        themeSwitcher.setAttribute('aria-label', themeSwitcherLabel);\n    };\n    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => {\n        const storedTheme = getStoredTheme();\n        if (storedTheme !== 'light' && storedTheme !== 'dark') {\n            setTheme(getPreferredTheme());\n        }\n    });\n    window.addEventListener('DOMContentLoaded', () => {\n        showActiveTheme(getPreferredTheme());\n        document.querySelectorAll('[data-bs-theme-value]')\n            .forEach(toggle => {\n            toggle.addEventListener('click', () => {\n                const theme = toggle.getAttribute('data-bs-theme-value');\n                setStoredTheme(theme);\n                setTheme(theme);\n                showActiveTheme(theme);\n            });\n        });\n    });\n})();\n"],"names":["getStoredTheme","cookieName","name","ca","document","cookie","split","i","length","c","charAt","substring","indexOf","getCookie","getPreferredTheme","storedTheme","window","matchMedia","matches","setTheme","theme","documentElement","setAttribute","showActiveTheme","_a","themeSwitcher","getElementById","themeSwitcherText","activeThemeIcon","querySelector","btnToActive","iconOfActiveBtn","className","checkOfActiveBtn","querySelectorAll","forEach","element","classList","remove","add","themeSwitcherLabel","textContent","dataset","bsThemeValue","addEventListener","toggle","getAttribute","d","Date","setTime","getTime","expires","toUTCString","encodeURIComponent","setStoredTheme"],"sourceRoot":""}