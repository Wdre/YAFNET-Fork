{"version":3,"file":"admin-dashboard.min.js","mappings":"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","sources":["webpack://yetanotherforum-net/./node_modules/@kurkle/color/dist/color.esm.js","webpack://yetanotherforum-net/./node_modules/chart.js/dist/chart.js","webpack://yetanotherforum-net/./node_modules/chart.js/dist/chunks/helpers.dataset.js","webpack://yetanotherforum-net/webpack/bootstrap","webpack://yetanotherforum-net/webpack/runtime/define property getters","webpack://yetanotherforum-net/webpack/runtime/hasOwnProperty shorthand","webpack://yetanotherforum-net/webpack/runtime/make namespace object","webpack://yetanotherforum-net/./wwwroot/lib/pages/admin-dashboard.ts"],"sourcesContent":["/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as getDatasetClipArea, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _normalizeAngle, am as _readValueToProps, an as _updateBezierControlPoints, ao as _computeSegments, ap as _boundSegments, aq as _steppedInterpolation, ar as _bezierInterpolation, as as _pointInLine, at as _steppedLineTo, au as _bezierCurveTo, av as drawPoint, aw as addRoundedRectPath, ax as toTRBL, ay as toTRBLCorners, az as _boundSegment, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as distanceBetweenPoints, aG as noop, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as Ticks, aN as log10, aO as _longestText, aP as _filterBetween, aQ as _lookup } from './chunks/helpers.dataset.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n    _getAxisCount() {\n        return this._getAxis().length;\n    }\n    getFirstScaleIdForIndexAxis() {\n        const scales = this.chart.scales;\n        const indexScaleId = this.chart.options.indexAxis;\n        return Object.keys(scales).filter((key)=>scales[key].axis === indexScaleId).shift();\n    }\n    _getAxis() {\n        const axis = {};\n        const firstScaleAxisId = this.getFirstScaleIdForIndexAxis();\n        for (const dataset of this.chart.data.datasets){\n            axis[valueOrDefault(this.chart.options.indexAxis === 'x' ? dataset.xAxisID : dataset.yAxisID, firstScaleAxisId)] = true;\n        }\n        return Object.keys(axis);\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        const axisCount = this._getAxisCount();\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount * axisCount) : computeFitCategoryTraits(index, ruler, options, stackCount * axisCount);\n            const axisID = this.chart.options.indexAxis === 'x' ? this.getDataset().xAxisID : this.getDataset().yAxisID;\n            const axisNumber = this._getAxis().indexOf(valueOrDefault(axisID, this.getFirstScaleIdForIndexAxis()));\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined) + axisNumber;\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.5.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        const clip = getDatasetClipArea(this, meta);\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (clip) {\n            clipArea(ctx, clip);\n        }\n        meta.controller.draw();\n        if (clip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipSelf(ctx, element, endAngle) {\n    const { startAngle , x , y , outerRadius , innerRadius , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const outerAngleClip = Math.min(borderWidth / outerRadius, _normalizeAngle(startAngle - endAngle));\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius - borderWidth / 2, startAngle + outerAngleClip / 2, endAngle - outerAngleClip / 2);\n    if (innerRadius > 0) {\n        const innerAngleClip = Math.min(borderWidth / innerRadius, _normalizeAngle(startAngle - endAngle));\n        ctx.arc(x, y, innerRadius + borderWidth / 2, endAngle - innerAngleClip / 2, startAngle + innerAngleClip / 2, true);\n    } else {\n        const clipWidth = Math.min(borderWidth / 2, outerRadius * _normalizeAngle(startAngle - endAngle));\n        if (borderJoinStyle === 'round') {\n            ctx.arc(x, y, clipWidth, endAngle - PI / 2, startAngle + PI / 2, true);\n        } else if (borderJoinStyle === 'bevel') {\n            const r = 2 * clipWidth * clipWidth;\n            const endX = -r * Math.cos(endAngle + PI / 2) + x;\n            const endY = -r * Math.sin(endAngle + PI / 2) + y;\n            const startX = r * Math.cos(startAngle + PI / 2) + x;\n            const startY = r * Math.sin(startAngle + PI / 2) + y;\n            ctx.lineTo(endX, endY);\n            ctx.lineTo(startX, startY);\n        }\n    }\n    ctx.closePath();\n    ctx.moveTo(0, 0);\n    ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.clip('evenodd');\n}\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset , borderRadius  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (options.selfJoin && endAngle - startAngle >= PI && borderRadius === 0 && borderJoinStyle !== 'miter') {\n        clipSelf(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true,\n        selfJoin: false\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { chart , index , line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    const meta = chart.getDatasetMeta(index);\n    const clip = getDatasetClipArea(chart, meta);\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis,\n            clip\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale , clip  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    let fillColor = below;\n    if (below !== above) {\n        if (property === 'x') {\n            clipVertical(ctx, target, area.top);\n            fill(ctx, {\n                line,\n                target,\n                color: above,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipVertical(ctx, target, area.bottom);\n        } else if (property === 'y') {\n            clipHorizontal(ctx, target, area.left);\n            fill(ctx, {\n                line,\n                target,\n                color: below,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipHorizontal(ctx, target, area.right);\n            fillColor = above;\n        }\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: fillColor,\n        scale,\n        property,\n        clip\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction clipHorizontal(ctx, target, clipX) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(clipX, firstPoint.y);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(clipX, lastPoint.y);\n        }\n    }\n    ctx.lineTo(clipX, target.first().y);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale , clip  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, clip, bounds) {\n    const chartArea = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x' || property === 'y') {\n        let left, top, right, bottom;\n        if (property === 'x') {\n            left = start;\n            top = chartArea.top;\n            right = end;\n            bottom = chartArea.bottom;\n        } else {\n            left = chartArea.left;\n            top = start;\n            right = chartArea.right;\n            bottom = end;\n        }\n        ctx.beginPath();\n        if (clip) {\n            left = Math.max(left, clip.left);\n            right = Math.min(right, clip.right);\n            top = Math.max(top, clip.top);\n            bottom = Math.min(bottom, clip.bottom);\n        }\n        ctx.rect(left, top, right - left, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */ function isNonPrimitive(n) {\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\n}\nfunction isNumber(n) {\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , vScale , _parsed  } = meta;\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n            if (spanGaps) {\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                start -= Math.max(0, distanceToDefinedLo);\n            }\n            start = _limitValue(start, 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            let end = Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n            if (spanGaps) {\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                end += Math.max(0, distanceToDefinedHi);\n            }\n            count = _limitValue(end, start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nfunction getDatasetClipArea(chart, meta) {\n    const clip = meta._clip;\n    if (clip.disabled) {\n        return false;\n    }\n    const area = getDatasetArea(meta, chart.chartArea);\n    return {\n        left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n        right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n        top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n        bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n    };\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, getStyle as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, distanceBetweenPoints as aF, noop as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, Ticks as aM, log10 as aN, _longestText as aO, _filterBetween as aP, _lookup as aQ, isPatternOrGradient as aR, getHoverColor as aS, clone as aT, _merger as aU, _mergerIf as aV, _deprecated as aW, _splitKey as aX, toFontString as aY, splineCurve as aZ, splineCurveMonotone as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, getDatasetClipArea as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _normalizeAngle as al, _readValueToProps as am, _updateBezierControlPoints as an, _computeSegments as ao, _boundSegments as ap, _steppedInterpolation as aq, _bezierInterpolation as ar, _pointInLine as as, _steppedLineTo as at, _bezierCurveTo as au, drawPoint as av, addRoundedRectPath as aw, toTRBL as ax, toTRBLCorners as ay, _boundSegment as az, isArray as b, fontString as b0, toLineHeight as b1, PITAU as b2, INFINITY as b3, RAD_PER_DEG as b4, QUARTER_PI as b5, TWO_THIRDS_PI as b6, _angleDiff as b7, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.dataset.js.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { Chart, BarController, BarElement, PieController, PolarAreaController, ArcElement, LinearScale, RadarController, RadialLinearScale, CategoryScale, Title, Legend, Tooltip } from 'chart.js';\nChart.register(BarController, BarElement, PieController, PolarAreaController, ArcElement, LinearScale, RadarController, RadialLinearScale, CategoryScale, Title, Legend, Tooltip);\nconst canvasBrowsers = document.getElementById('chart-browsers');\nconst canvasPlatforms = document.getElementById('chart-platforms');\nconst canvasCountries = document.getElementById('chart-countries');\nconst canvasRegistrations = document.getElementById('chart-registrations');\nconst labelsBrowsers = new Array();\nconst labelsPlatforms = new Array();\nconst labelsCountries = new Array();\nconst labelsRegistrations = new Array();\nconst dataBrowsers = new Array();\nconst dataPlatforms = new Array();\nconst dataCountries = new Array();\nconst dataRegistrations = new Array();\nconst style = getComputedStyle(document.body);\nconst colors = [\n    style.getPropertyValue('--bs-primary'),\n    style.getPropertyValue('--bs-secondary'),\n    style.getPropertyValue('--bs-success'),\n    style.getPropertyValue('--bs-info'),\n    style.getPropertyValue('--bs-warning'),\n    style.getPropertyValue('--bs-danger'),\n    style.getPropertyValue('--bs-light'),\n    style.getPropertyValue('--bs-dark')\n];\nif (canvasBrowsers && canvasPlatforms && canvasRegistrations) {\n    var url = canvasBrowsers.dataset.url;\n    fetch(url, {\n        method: 'GET',\n        headers: {\n            'RequestVerificationToken': document.querySelector('input[name=\"__RequestVerificationToken\"]').value\n        }\n    }).then(res => res.json()).then(data => {\n        data.browsers.forEach((stats) => {\n            labelsBrowsers.push(stats.label);\n            dataBrowsers.push(stats.data);\n        });\n        data.platforms.forEach((stats) => {\n            labelsPlatforms.push(stats.label);\n            dataPlatforms.push(stats.data);\n        });\n        data.countries.forEach((stats) => {\n            labelsCountries.push(stats.label);\n            dataCountries.push(stats.data);\n        });\n        data.registrations.forEach((stats) => {\n            labelsRegistrations.push(stats.label);\n            dataRegistrations.push(stats.data);\n        });\n        const ctxBrowsers = canvasBrowsers.getContext('2d');\n        const chartBrowsers = new Chart(ctxBrowsers, {\n            type: 'polarArea',\n            data: {\n                labels: labelsBrowsers,\n                datasets: [\n                    {\n                        label: canvasBrowsers.dataset.label,\n                        data: dataBrowsers,\n                        backgroundColor: colors\n                    }\n                ]\n            },\n            options: {\n                plugins: {\n                    title: {\n                        display: true,\n                        text: canvasBrowsers.dataset.title\n                    }\n                }\n            }\n        });\n        const ctxPlatforms = canvasPlatforms.getContext('2d');\n        const chartPlatforms = new Chart(ctxPlatforms, {\n            type: 'pie',\n            data: {\n                labels: labelsPlatforms,\n                datasets: [\n                    {\n                        label: canvasPlatforms.dataset.label,\n                        data: dataPlatforms,\n                        backgroundColor: colors\n                    }\n                ]\n            },\n            options: {\n                plugins: {\n                    title: {\n                        display: true,\n                        text: canvasPlatforms.dataset.title\n                    }\n                }\n            }\n        });\n        if (canvasCountries) {\n            const ctxCountries = canvasCountries.getContext('2d');\n            const chartCountries = new Chart(ctxCountries, {\n                type: 'bar',\n                data: {\n                    labels: labelsCountries,\n                    datasets: [\n                        {\n                            label: canvasCountries.dataset.label,\n                            data: dataCountries,\n                            backgroundColor: colors\n                        }\n                    ]\n                },\n                options: {\n                    plugins: {\n                        title: {\n                            display: true,\n                            text: canvasCountries.dataset.title\n                        }\n                    }\n                }\n            });\n        }\n        const ctxRegistrations = canvasRegistrations.getContext('2d');\n        const chartRegistrations = new Chart(ctxRegistrations, {\n            type: 'bar',\n            data: {\n                labels: labelsRegistrations,\n                datasets: [\n                    {\n                        label: canvasRegistrations.dataset.label,\n                        data: dataRegistrations,\n                        backgroundColor: colors\n                    }\n                ]\n            },\n            options: {\n                plugins: {\n                    title: {\n                        display: true,\n                        text: canvasRegistrations.dataset.title\n                    }\n                }\n            }\n        });\n    });\n}\n"],"names":["round","v","lim","l","h","Math","max","min","p2b","b2p","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","ret","len","length","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","hueValue","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","Color","constructor","type","charAt","this","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","index_esm","Animator","_request","_charts","Map","_running","_lastDate","_notify","chart","anims","date","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","start","_refresh","call","window","_update","Date","now","remaining","running","items","item","draw","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","_duration","stop","cancel","remove","delete","animator","interpolators","boolean","factor","c0","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","animationOptions","animation","animatedProps","getOwnPropertyNames","key","option","properties","_animateOptions","values","newOptions","options","$shared","$animations","resolveTargetOptions","animations","_createAnimations","anim","all","awaitAll","then","props","value","size","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","found","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","id","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","scales","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","fill","isPluginEnabled","console","warn","updateIndex","dataset","getDataset","chooseId","y","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","data","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","u","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","top","right","bottom","left","disabled","toClip","clip","defaultClip","elements","area","chartArea","drawActiveElementsOnTop","element","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","_","sort","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","base","borderProps","enableBorderRadius","parseEdge","orig","v1","v2","startEnd","setInflateAmount","inflateAmount","BarController","categoryPercentage","barPercentage","grouped","numbers","_index_","offset","grid","_value_","beginAtZero","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","currentParsed","iScaleValue","skipNull","find","isNaN","indexOf","_getStackCount","_getAxisCount","_getAxis","getFirstScaleIdForIndexAxis","indexScaleId","firstScaleAxisId","_getStackIndex","name","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","axisCount","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","axisID","axisNumber","stackIndex","rects","BubbleController","radius","points","point","iPixel","vPixel","skip","DoughnutController","animateRotate","animateScale","cutout","rotation","circumference","spacing","_scriptable","_indexable","startsWith","aspectRatio","plugins","legend","generateLabels","pointStyle","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","borderWidth","onClick","legendItem","toggleDataVisibility","innerRadius","outerRadius","offsetX","offsetY","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","locale","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","showLine","spanGaps","line","_dataset","animationsDisabled","_datasetIndex","_decimated","segment","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","angleLines","display","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","interaction","registry","getElement","controllers","__proto__","abstract","Error","DateAdapterBase","override","members","prototype","init","formats","format","diff","startOf","endOf","adapters","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","result","distanceToDefinedLo","slice","lo","findIndex","distanceToDefinedHi","hi","el","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","setLayoutDims","layouts","params","wrap","stackWeight","includes","_stack","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","positions","margin","fitBoxes","boxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","passive","removeListener","nodeListContains","nodeList","node","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","autoSkip","tickOpts","determinedMaxTicks","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","lineHeight","titleAlign","align","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","callback","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","title","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","gcLen","garbageCollect","valueAt","idx","pixel","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","backdrop","tickTextAlign","showLabelBackdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","drawGrid","drawLine","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","getPrototypeOf","parentScope","isIChartComponent","itemDefaults","defaults","defaultRoutes","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","routeDefaults","descriptors","describe","registerDefaults","overrides","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","local","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","hasFunction","needContext","subResolver","descriptorDefaults","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","maintainAspectRatio","responsive","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","hover","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","onHover","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","PI","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","closePath","fullCircles","borderJoinStyle","inner","lineJoin","angleMargin","clipArc","selfJoin","outerAngleClip","innerAngleClip","clipWidth","rect","clipSelf","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","translate","radiusOffset","drawArc","setStyle","lineCap","borderCapStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","tension","cubicInterpolationMode","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segments","segmentMethod","strokePathDirect","LineElement","capBezierPoints","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","boundingRects","bounds","maxW","maxH","parseBorderWidth","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","pointCount","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","fillOption","parseFillOption","parseFloat","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","fillColor","clipVertical","clipHorizontal","doFill","clipY","lineLoop","clipX","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","drawLegendBox","strikethrough","fillText","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_fallback","Colors","Decimation","Filler","SubTitle","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","relativeLabelSize","minSpacing","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","tickValue","generateTicks$1","LinearScale","formatters","numeric","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","generateTicks","minExp","exp","startExp","significand","lastTick","LogarithmicScale","logarithmic","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","noop","uid","isNullOrUndef","toString","isObject","isNumberFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","toDimension","thisArg","each","loopable","_elementsEqual","a0","a1","klen","isValidKey","_merger","tval","sval","merge","merger","current","mergeIf","_mergerIf","hasOwnProperty","_deprecated","keyResolvers","_splitKey","part","resolveObjectKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","_isClickEvent","TAU","PITAU","INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","niceNum","roundedRange","niceRange","fraction","_factorize","isNumber","Symbol","toPrimitive","isNonPrimitive","almostWhole","rounded","_setMinAndMaxByKey","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","atan2","distanceBetweenPoints","_angleDiff","_normalizeAngle","_angleBetween","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","cmp","mid","_lookupByKey","ti","_rlookupByKey","_filterBetween","arrayEvents","listenArrayEvents","_chartjs","object","unlistenArrayEvents","stub","_arrayUnique","pixelSize","fontStyle","fontFamily","requestAnimFrame","requestAnimationFrame","throttled","argsToUse","ticking","debounce","timeout","clearTimeout","setTimeout","_toLeftRightCenter","_alignStartEnd","_textX","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","atEdge","elasticIn","elasticOut","effects","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","colors","intlCache","formatNumber","num","JSON","stringify","Intl","NumberFormat","getNumberFormat","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","Ticks","getScope$1","root","Defaults","_appliers","family","hoverBackgroundColor","hoverBorderColor","hoverColor","scopeObject","targetScopeObject","privateName","defineProperties","appliers","toFontString","_measureText","longest","_longestText","arrayOfThings","thing","nestedThing","_alignPixel","halfWidth","clearCanvas","resetTransform","clearRect","drawPoint","drawPointLegend","xOffset","yOffset","xOffsetW","yOffsetW","drawImage","ellipse","SQRT1_2","_isPointInArea","clipArea","unclipArea","_steppedLineTo","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","drawBackdrop","oldColor","renderText","setRenderOpts","strokeText","addRoundedRectPath","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","objProps","read","toTRBL","toTRBLCorners","toPadding","toFont","resolve","inputs","info","cacheable","_addGrace","minmax","keepZero","createContext","parentContext","_createResolver","rootScopes","getTarget","finalRootScopes","_resolve","toStringTag","_scopes","_rootScopes","Proxy","deleteProperty","_keys","_cached","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","_context","_subProxy","receiver","getValue","_resolveScriptable","_resolveArray","_resolveWithContext","_allKeys","resolveFallback","getScope","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","EPSILON","getPoint","getValueAxis","splineCurve","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","monotoneCompute","capControlPoint","_updateBezierControlPoints","controlPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","ownerDocument","defaultView","getPropertyValue","getPositionedStyle","styles","suffix","useOffsetPos","shadowRoot","getRelativePosition","borderBox","paddings","borders","touches","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","bbWidth","bbHeight","containerSize","containerStyle","containerBorder","containerPadding","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalizeSegment","_boundSegment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","sub","_computeSegments","segmentOptions","findStartAndEnd","splitByStyles","solidSegments","chartContext","baseStyle","readStyle","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","replacer","getSizeForArea","field","getDatasetClipArea","getDatasetArea","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","definition","canvasBrowsers","canvasPlatforms","canvasCountries","canvasRegistrations","labelsBrowsers","labelsPlatforms","labelsCountries","labelsRegistrations","dataBrowsers","dataPlatforms","dataCountries","dataRegistrations","url","fetch","headers","querySelector","json","browsers","stats","platforms","countries","registrations","ctxBrowsers","ctxPlatforms","ctxCountries","ctxRegistrations"],"sourceRoot":""}